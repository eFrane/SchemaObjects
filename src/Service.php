<?php
/**
 * This is a generated class based on the schema.org type catalog.
 *
 * @license MIT
 */


declare(strict_types=1);

namespace EFrane\SchemaObjects;

/**
 * A service provided by an organization, e.g. delivery service, print services,
 * etc.
 */
class Service extends Intangible
{
    /**
     * An associated logo.
     */
    private $logo;

    /**
     * The audience eligible for this service.
     */
    private $serviceAudience;

    /**
     * An intended audience, i.e. a group for whom something was created.
     */
    private $audience;

    /**
     * The brand(s) associated with a product or service, or the brand(s) maintained by
     * an organization or business person.
     */
    private $brand;

    /**
     * The tangible thing generated by the service, e.g. a passport, permit, etc.
     */
    private $produces;

    /**
     * The tangible thing generated by the service, e.g. a passport, permit, etc.
     */
    private $serviceOutput;

    /**
     * The service provider, service operator, or service performer; the goods
     * producer. Another party (a seller) may offer those services or goods on behalf
     * of the provider. A provider may also serve as the seller.
     */
    private $provider;

    /**
     * A means of accessing the service (e.g. a phone bank, a web site, a location,
     * etc.).
     */
    private $availableChannel;

    /**
     * An entity that arranges for an exchange between a buyer and a seller.  In most
     * cases a broker never acquires or releases ownership of a product or service
     * involved in an exchange.  If it is not clear whether an entity is a broker,
     * seller, or buyer, the latter two terms are preferred.
     */
    private $broker;

    /**
     * The type of service being offered, e.g. veterans' benefits, emergency relief,
     * etc.
     */
    private $serviceType;

    /**
     * A pointer to another, functionally similar product (or multiple products).
     */
    private $isSimilarTo;

    /**
     * Human-readable terms of service documentation.
     */
    private $termsOfService;

    /**
     * Indicates the mobility of a provided service (e.g. 'static', 'dynamic').
     */
    private $providerMobility;

    public function getLogo()
    {
        return $this->logo;
    }

    public function setLogo($logo)
    {
        $this->logo = $logo;
    }

    public function getServiceAudience()
    {
        return $this->serviceAudience;
    }

    public function setServiceAudience($serviceAudience)
    {
        $this->serviceAudience = $serviceAudience;
    }

    public function getAudience()
    {
        return $this->audience;
    }

    public function setAudience($audience)
    {
        $this->audience = $audience;
    }

    public function getBrand()
    {
        return $this->brand;
    }

    public function setBrand($brand)
    {
        $this->brand = $brand;
    }

    public function getProduces()
    {
        return $this->produces;
    }

    public function setProduces($produces)
    {
        $this->produces = $produces;
    }

    public function getServiceOutput()
    {
        return $this->serviceOutput;
    }

    public function setServiceOutput($serviceOutput)
    {
        $this->serviceOutput = $serviceOutput;
    }

    public function getProvider()
    {
        return $this->provider;
    }

    public function setProvider($provider)
    {
        $this->provider = $provider;
    }

    public function getAvailableChannel()
    {
        return $this->availableChannel;
    }

    public function setAvailableChannel($availableChannel)
    {
        $this->availableChannel = $availableChannel;
    }

    public function getBroker()
    {
        return $this->broker;
    }

    public function setBroker($broker)
    {
        $this->broker = $broker;
    }

    public function getServiceType()
    {
        return $this->serviceType;
    }

    public function setServiceType($serviceType)
    {
        $this->serviceType = $serviceType;
    }

    public function getIsSimilarTo()
    {
        return $this->isSimilarTo;
    }

    public function setIsSimilarTo($isSimilarTo)
    {
        $this->isSimilarTo = $isSimilarTo;
    }

    public function getTermsOfService()
    {
        return $this->termsOfService;
    }

    public function setTermsOfService($termsOfService)
    {
        $this->termsOfService = $termsOfService;
    }

    public function getProviderMobility()
    {
        return $this->providerMobility;
    }

    public function setProviderMobility($providerMobility)
    {
        $this->providerMobility = $providerMobility;
    }
}

